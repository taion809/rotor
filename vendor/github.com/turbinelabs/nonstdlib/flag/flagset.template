/*
Copyright 2018 Turbine Labs, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by {{.Source}} from {{.Template}}.
// Any changes will be lost if this file is regenerated.

package flag

{{if .HasImports -}}
import (
{{- range .AllImports}}
	"{{.}}"
{{- end}}

	"flag"
)
{{- end}}

// FlagSet represents an optionally scoped *flag.FlagSet.
type FlagSet interface {
	// Scope creates a new scoped FlagSet. The name of any flag
	// added to the new FlagSet is prefixed with the given
	// prefix. In the flag's uage, the expression "{{ "{{" }}NAME{{ "}}" }}", is
	// replaced with the given description.
	Scope(prefix, description string) FlagSet

	// GetScope retrieves this FlagSet's scoping prefix, including
	// a trailing period.
	GetScope() string

	// Unwrap returns the flag.FlagSet underlying this FlagSet.
	Unwrap() *flag.FlagSet

	// Var defines a flag with the specified name and usage. The
	// flag's type and value are derived from value. See
	// flag.FlagSet.Var for more information.
	Var(value flag.Value, name string, usage string)

	// HostPortVar defines a HostPort flag with the specified name,
	// default value, and usage string. The argument hp points to a
	// HostPort variable in which to store the value of the flag.
	// The flag accepts "host:port" strings.
	HostPortVar(hp *HostPort, name string, value HostPort, usage string)

	// HostPort defines a HostPort flag with the specified name,
	// default value, and usage string. The return value is the
	// address of a HostPort variable that stores the value of the
	// flag. The flag accepts "host:port" strings.
	HostPort(name string, value HostPort, usage string) *HostPort
{{range .types}}
	// {{.Public}}Var defines a {{.Type}} flag with the specified name,
	// default value, and usage. The flag's value is stored in p.
	{{.Public}}Var(p *{{.Type}}, name string, value {{.Type}}, usage string)

	// {{.Public}} defines a {{.Type}} flag with the specified name,
	// default value, and usage. The return value is a pointer
	// to a variable that stores the flag's value.
	{{.Public}}(name string, value {{.Type}}, usage string) *{{.Type}}
{{end -}}
}
