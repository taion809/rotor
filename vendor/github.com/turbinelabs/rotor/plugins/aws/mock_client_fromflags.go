// Code generated by MockGen. DO NOT EDIT.
// Source: client_fromflags.go

package aws

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// mockClientFromFlags is a mock of clientFromFlags interface
type mockClientFromFlags struct {
	ctrl     *gomock.Controller
	recorder *mockClientFromFlagsMockRecorder
}

// mockClientFromFlagsMockRecorder is the mock recorder for mockClientFromFlags
type mockClientFromFlagsMockRecorder struct {
	mock *mockClientFromFlags
}

// newMockClientFromFlags creates a new mock instance
func newMockClientFromFlags(ctrl *gomock.Controller) *mockClientFromFlags {
	mock := &mockClientFromFlags{ctrl: ctrl}
	mock.recorder = &mockClientFromFlagsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *mockClientFromFlags) EXPECT() *mockClientFromFlagsMockRecorder {
	return m.recorder
}

// MakeEC2Client mocks base method
func (m *mockClientFromFlags) MakeEC2Client() ec2Interface {
	ret := m.ctrl.Call(m, "MakeEC2Client")
	ret0, _ := ret[0].(ec2Interface)
	return ret0
}

// MakeEC2Client indicates an expected call of MakeEC2Client
func (mr *mockClientFromFlagsMockRecorder) MakeEC2Client() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakeEC2Client", reflect.TypeOf((*mockClientFromFlags)(nil).MakeEC2Client))
}

// MakeAWSClient mocks base method
func (m *mockClientFromFlags) MakeAWSClient() awsClient {
	ret := m.ctrl.Call(m, "MakeAWSClient")
	ret0, _ := ret[0].(awsClient)
	return ret0
}

// MakeAWSClient indicates an expected call of MakeAWSClient
func (mr *mockClientFromFlagsMockRecorder) MakeAWSClient() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakeAWSClient", reflect.TypeOf((*mockClientFromFlags)(nil).MakeAWSClient))
}
