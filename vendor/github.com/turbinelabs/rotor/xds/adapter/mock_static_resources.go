// Code generated by MockGen. DO NOT EDIT.
// Source: static_resources.go

package adapter

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// mockStaticResourcesProvider is a mock of staticResourcesProvider interface
type mockStaticResourcesProvider struct {
	ctrl     *gomock.Controller
	recorder *mockStaticResourcesProviderMockRecorder
}

// mockStaticResourcesProviderMockRecorder is the mock recorder for mockStaticResourcesProvider
type mockStaticResourcesProviderMockRecorder struct {
	mock *mockStaticResourcesProvider
}

// newMockStaticResourcesProvider creates a new mock instance
func newMockStaticResourcesProvider(ctrl *gomock.Controller) *mockStaticResourcesProvider {
	mock := &mockStaticResourcesProvider{ctrl: ctrl}
	mock.recorder = &mockStaticResourcesProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *mockStaticResourcesProvider) EXPECT() *mockStaticResourcesProviderMockRecorder {
	return m.recorder
}

// StaticResources mocks base method
func (m *mockStaticResourcesProvider) StaticResources() staticResources {
	ret := m.ctrl.Call(m, "StaticResources")
	ret0, _ := ret[0].(staticResources)
	return ret0
}

// StaticResources indicates an expected call of StaticResources
func (mr *mockStaticResourcesProviderMockRecorder) StaticResources() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StaticResources", reflect.TypeOf((*mockStaticResourcesProvider)(nil).StaticResources))
}

// mockResourcesFromFlags is a mock of resourcesFromFlags interface
type mockResourcesFromFlags struct {
	ctrl     *gomock.Controller
	recorder *mockResourcesFromFlagsMockRecorder
}

// mockResourcesFromFlagsMockRecorder is the mock recorder for mockResourcesFromFlags
type mockResourcesFromFlagsMockRecorder struct {
	mock *mockResourcesFromFlags
}

// newMockResourcesFromFlags creates a new mock instance
func newMockResourcesFromFlags(ctrl *gomock.Controller) *mockResourcesFromFlags {
	mock := &mockResourcesFromFlags{ctrl: ctrl}
	mock.recorder = &mockResourcesFromFlagsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *mockResourcesFromFlags) EXPECT() *mockResourcesFromFlagsMockRecorder {
	return m.recorder
}

// Make mocks base method
func (m *mockResourcesFromFlags) Make() (staticResourcesProvider, error) {
	ret := m.ctrl.Call(m, "Make")
	ret0, _ := ret[0].(staticResourcesProvider)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Make indicates an expected call of Make
func (mr *mockResourcesFromFlagsMockRecorder) Make() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Make", reflect.TypeOf((*mockResourcesFromFlags)(nil).Make))
}

// Validate mocks base method
func (m *mockResourcesFromFlags) Validate() error {
	ret := m.ctrl.Call(m, "Validate")
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate
func (mr *mockResourcesFromFlagsMockRecorder) Validate() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*mockResourcesFromFlags)(nil).Validate))
}
