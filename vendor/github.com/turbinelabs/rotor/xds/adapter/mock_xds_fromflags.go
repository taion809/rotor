// Code generated by MockGen. DO NOT EDIT.
// Source: xds_fromflags.go

package adapter

import (
	gomock "github.com/golang/mock/gomock"
	poller "github.com/turbinelabs/rotor/xds/poller"
	reflect "reflect"
)

// MockXDSFromFlags is a mock of XDSFromFlags interface
type MockXDSFromFlags struct {
	ctrl     *gomock.Controller
	recorder *MockXDSFromFlagsMockRecorder
}

// MockXDSFromFlagsMockRecorder is the mock recorder for MockXDSFromFlags
type MockXDSFromFlagsMockRecorder struct {
	mock *MockXDSFromFlags
}

// NewMockXDSFromFlags creates a new mock instance
func NewMockXDSFromFlags(ctrl *gomock.Controller) *MockXDSFromFlags {
	mock := &MockXDSFromFlags{ctrl: ctrl}
	mock.recorder = &MockXDSFromFlagsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockXDSFromFlags) EXPECT() *MockXDSFromFlagsMockRecorder {
	return m.recorder
}

// Make mocks base method
func (m *MockXDSFromFlags) Make(registrar poller.Registrar) (XDS, error) {
	ret := m.ctrl.Call(m, "Make", registrar)
	ret0, _ := ret[0].(XDS)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Make indicates an expected call of Make
func (mr *MockXDSFromFlagsMockRecorder) Make(registrar interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Make", reflect.TypeOf((*MockXDSFromFlags)(nil).Make), registrar)
}

// Validate mocks base method
func (m *MockXDSFromFlags) Validate() error {
	ret := m.ctrl.Call(m, "Validate")
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate
func (mr *MockXDSFromFlagsMockRecorder) Validate() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockXDSFromFlags)(nil).Validate))
}
